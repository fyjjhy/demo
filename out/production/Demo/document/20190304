梳理static、final
1.static修饰成员变量
a.不属于对象的数据结构，而属于类的属性
b.与类的信息一道存于方法区，且只有一份，无论该类创建多少对象
2.static修饰方法
a.返回结果与对象无关，只与输入参数有关，在静态方法中不可以使用this关键字
b.在静态方法中不能访问非static成员(对象成员)
3.static修饰代码块
a.在类加载期间加载，用来加载静态资源，只执行一次
b.属于类的代码块
4.static修饰类
a.不需要通过创建外部类对象来创建静态内部类
b.只能访问外部类的静态成员，不能访问外部类的非静态成员
------------------------------------------------------
1.final修饰成员变量
a.意为不可改变
b.可以在声明的同时初始化或者在构造方法中初始化
c.修饰局部变量，使用之前初始化
2.final修饰方法
a.表示方法不可以被重写
b.意义:防止子类在定义新方法时造成的"不经意"重写
3.final修饰类
a.表示类不可以被继承
b.意义:保护类不被继承修改，可以控制滥用继承对系统造成的危害
--------------------
1.static final修饰成员变量
a.表示常量，必须在声明的同时初始化，不可被改变
b.在编译期将常量替换为具体的值
2.static final修饰方法
a.方法不能被重写，可以在不new对象的情况下调用

梳理内部类
1.成员变量内部类
a.成员变量内部类可以访问外部类中的所有成员(包括私有的)
b.必须先创建外部类的对象，然后通过外部类的对象创建内部类对象
c.内部类通常只服务于外部类，对外部不具备可见性
d.一般情况下，内部类对象会在外部类对象中创建(构造方法或其他方法)
2.匿名内部类
a.类对象创建完后，类的作用就消失了，这样的类可以不必命名，称之为匿名内部类
3.静态内部类
a.不依赖外部类的实例，直接实例化内部类对象
b.静态内部类只能访问外部类的静态成员，不能访问外部类的非静态成员
c.静态内部类可以有静态成员(方法，属性)，而非静态内部类则不能有静态成员(方法，属性)
