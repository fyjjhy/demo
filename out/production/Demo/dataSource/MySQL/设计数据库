【列类型】
    数据列
    计算列
【三范式】
    1.对属性的原子性约束，要求属性具有原子性，不可再分解。
    2.对记录的唯一性约束，要求记录有唯一标识，即实体的唯一性。[主键约束]
    3.对字段冗余性的约束，即任何字段不能由其他字段派生出来，要求字段没有冗余。
    [表的非主属性不能依赖与其他表的非主属性，外键约束]
    三大范式是一级一级依赖的，第二范式建立在第一范式上，第三范式建立在第一第二范式上。
【数据冗余】
    低级冗余：非键字段的重复出现，才是数据冗余。而且是一种低级冗余，即重复性的冗余。
    高级冗余：不是字段的重复出现，而是字段的派生出现。
【设计数据库步骤】
    1.收集信息
    2.标识对象
    3.设计数据模型
    4.标识每个对象
    5.存储的信息类型
    6.标识对象之间的关系
【索引】
    索引就是为了提高查询性能而存在的。
    一般唯一、不为空、经常被查询的字段适合建索引。
【MySQL无法使用索引】
    1.字段使用函数
    2.join语句中join条件字段类型不一致的时候
    3.复合索引的情况下，如果查询条件不包含索引列的最左边部分，即不满足最左前缀原则，则不会使用索引
    4.如果MySQL估计使用索引扫描比全表扫描更慢，则不适用索引。(扫描数据超过30%，都会走全表)
    5.以%开头的like查询
    6.数据类型出现隐式转换的时候也不会使用索引，特别是当列类型是字符串，那么一定记得在where条件中把字符串常量值用引号引
    起来，否则即便这个列上有索引，MySQL也不会用到，因为MySQL默认把输入的常量值进行转换后才进行检索。
    7.用or分割开的条件，如果or前的条件中的列有索引，而后面的列没有索引，那么涉及的索引都不会被用到。
【存储过程】
    是一个预编译的SQL语句。
【存储引擎】
    InnoDB: 支持事务处理、外键和行级锁。
    MyISAM: 执行速度更快。