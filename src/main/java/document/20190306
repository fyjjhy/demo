2019-03-06 21:17:22
什么是线程安全?
如果代码在多线程下执行和在单线程下执行永远都能获得一样的结果，那么代码就是线程安全的。
线程安全级别:
1.不可变
a.final修饰的类，如String、Integer、Long都是不可变类
2.绝对线程安全
a.CopyOnWriteArrayList、CopyOnWriteArraySet是绝对线程安全的类
3.线程安全
Vector、HashTable、StringBuffer是线程安全的
4.线程非安全
StringBuilder、ArrayList、HashMap都是非线程安全的
------------------------------------------------
2019-03-07 13:29:02
响应中断:中断线程的等待状态。
如果有一个线程已经占用了读锁，此时其他线程如果要申请写锁，申请写锁的线程会一直等待释放读锁。
如果有一个线程已经占用了写锁，此时其他线程如果申请写锁或者读锁，申请的线程会一直等待释放写锁。
可重入锁:
synchronized和ReentrantLock都是可重入锁。
锁的分配机制:基于线程分配，而不是基于方法调用的分配。
可中断锁:
Lock是可中断锁。
公平锁:
尽量以请求锁的顺序来获取锁。
ReentrantLock和ReentrantReadWriteLock默认是非公平锁，可设置成公平锁。
读写锁:
ReadWriteLock是读写锁。